// AUTOGENERATED FILE, DO NOT EDIT
//
// Crate Name: `proc_macro2`
// Crate Version: `1.0.37`
impl<>  crate::Debug for proc_macro2::Delimiter<> where  {
    fn fmt(&self, f: &mut crate::Formatter) {
        match self {
            proc_macro2::Delimiter::Parenthesis => { f.debug_tuple("Parenthesis").finish(); }
            proc_macro2::Delimiter::Brace => { f.debug_tuple("Brace").finish(); }
            proc_macro2::Delimiter::Bracket => { f.debug_tuple("Bracket").finish(); }
            proc_macro2::Delimiter::None => { f.debug_tuple("None").finish(); }
        }
    }
}
// Skipping proc_macro2::Group due to hidden fields
// Skipping proc_macro2::Ident due to hidden fields
// Skipping proc_macro2::token_stream::IntoIter due to hidden fields
// Skipping proc_macro2::LexError due to hidden fields
impl<> crate::Debug for proc_macro2::LineColumn<>  where  {
    fn fmt(&self, f: &mut crate::Formatter) {
        f.debug_struct("LineColumn")
            .field("line", &self.line)
            .field("column", &self.column)
            .finish()
    }
}
// Skipping proc_macro2::Literal due to hidden fields
// Skipping proc_macro2::Punct due to hidden fields
impl<>  crate::Debug for proc_macro2::Spacing<> where  {
    fn fmt(&self, f: &mut crate::Formatter) {
        match self {
            proc_macro2::Spacing::Alone => { f.debug_tuple("Alone").finish(); }
            proc_macro2::Spacing::Joint => { f.debug_tuple("Joint").finish(); }
        }
    }
}
// Skipping proc_macro2::Span due to hidden fields
// Skipping proc_macro2::TokenStream due to hidden fields
// Skiping proc_macro2::TokenTree due to config rule TokenTree
