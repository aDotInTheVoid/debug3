// AUTOGENERATED FILE, DO NOT EDIT
//
// Crate Name: `ungrammar`
// Crate Version: `1.16.1`
// Skipping ungrammar::Error due to hidden fields
// Skipping ungrammar::Grammar due to hidden fields
// Skipping ungrammar::Node due to hidden fields
impl crate::Debug for ungrammar::NodeData {
    fn fmt(&self, f: &mut crate::Formatter) {
        f.debug_struct("NodeData")
            .field("name", &self.name)
            .field("rule", &self.rule)
            .finish()
    }
}
impl crate::Debug for ungrammar::Rule {
    fn fmt(&self, f: &mut crate::Formatter) {
        match self {
            Self::Labeled { label, rule } => f
                .debug_struct("Labeled")
                .field("label", label)
                .field("rule", rule)
                .finish(),
            Self::Node(__0) => {
                f.debug_tuple("Node").field(__0).finish();
            }
            Self::Token(__0) => {
                f.debug_tuple("Token").field(__0).finish();
            }
            Self::Seq(__0) => {
                f.debug_tuple("Seq").field(__0).finish();
            }
            Self::Alt(__0) => {
                f.debug_tuple("Alt").field(__0).finish();
            }
            Self::Opt(__0) => {
                f.debug_tuple("Opt").field(__0).finish();
            }
            Self::Rep(__0) => {
                f.debug_tuple("Rep").field(__0).finish();
            }
        }
    }
}
// Skipping ungrammar::Token due to hidden fields
impl crate::Debug for ungrammar::TokenData {
    fn fmt(&self, f: &mut crate::Formatter) {
        f.debug_struct("TokenData")
            .field("name", &self.name)
            .finish()
    }
}
